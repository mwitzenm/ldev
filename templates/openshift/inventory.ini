[OSEv3:children]
masters
nodes
etcd
glusterfs

[OSEv3:vars]
###########################################################################
# Node labels
###########################################################################
##openshift_node_groups=[{'name': 'node-config-all-in-one', 'labels': ['node-role.kubernetes.io/master=true', 'node-role.kubernetes.io/infra=true', 'node-role.kubernetes.io/compute=true']}]
## https://docs.openshift.org/latest/install_config/install/advanced_install.html#configuring-node-host-labels
##openshift_node_groups=[{'name': 'node-config-all-in-one', 'labels': ['node-role.kubernetes.io/master=true', 'node-role.kubernetes.io/infra=true', 'node-role.kubernetes.io/compute=true']}]
#my_node_group1_labels=['region=primary', 'zone=default', 'node-role.kubernetes.io/master=true', 'node-role.kubernetes.io/infra=true', 'node-role.kubernetes.io/compute=true']
#my_node_group1={'name': 'node-config-all-in-one', 'labels': {{ my_node_group1_labels }} }
#openshift_node_groups=[{{ my_node_group1 }}]
#openshift_node_group_name="node-config-all-in-one"

openshift_node_groups=[{'name': 'node-config-all-in-one', 'labels': ['node-role.kubernetes.io/master=true', 'node-role.kubernetes.io/infra=true', 'node-role.kubernetes.io/compute=true']}]


###########################################################################
# OS repositories
###########################################################################
# openshift_additional_repos=[{'id': 'origin39', 'name': 'origin39', 'baseurl': 'https://buildlogs.centos.org/centos/7/paas/x86_64/openshift-origin39/', 'enabled': 1, 'gpgcheck': 0}]
#openshift_additional_repos=[{'id': 'openshift-origin-ci', 'name': 'OpenShift Origin CI repostory (caution: not release)', 'baseurl': 'https://storage.googleapis.com/origin-ci-test/releases/openshift/origin/master/origin.repo', 'enabled': 1, 'gpgcheck': 0}]
#openshift_additional_repos=[{'id': 'openshift-origin-ci', 'name': 'OpenShift Origin CI repostory (caution: not release)', 'baseurl': 'https://storage.googleapis.com/origin-ci-test/releases/openshift/origin/master/.latest-rpms', 'enabled': 1, 'gpgcheck': 0}]


###########################################################################
# General
###########################################################################
## Debug level for all OpenShift components (Defaults to 2)
## https://docs.openshift.org/3.9/install_config/install/advanced_install.html#configuring-cluster-variables
debug_level=4
#openshift_disable_check=*
#openshift_disable_check=disk_availability,docker_storage,memory_availability,docker_image_availability,package_version
openshift_disable_check=memory_availability,docker_image_availability,package_version

## Set this line to enable NFS
openshift_enable_unsupported_configurations=true

## Enable NTP
openshift_clock_enabled=false

## Default node selector
osm_default_node_selector='region=primary'
#osm_default_node_selector="node-role.kubernetes.io/compute=true"
#osm_default_node_selector="node-role.kubernetes.io/infra=true"

## Python Interpreter
#ansible_python_interpreter=/usr/bin/python

## Disable ip check on local host, since we can't to reverse lookup
## TODO: Fix CoreDNS's reverse lookup configuration
openshift_ip_check=false
os_update=true

###########################################################################
# Base config
###########################################################################
#deployment_type=origin
openshift_deployment_type=${OPENSHIFT_DEPLOYMENT_TYPE}
openshift_release="${OPENSHIFT_RELEASE}"
openshift_image_tag=${OPENSHIFT_IMAGE_TAG}
#openshift_pkg_version=${OPENSHIFT_PKG_VERSION}
openshift_repos_enable_testing=true
containerized=${OPENSHIFT_CONTAINERIZED}
#ansible_become=true
#ansible_ssh_user=vagrant
#ansible_ssh_private_key_file=/home/vagrant/.ssh/id_rsa
openshift_enable_excluders=false
enable_excluders=false
enable_docker_excluder=false
enable_openshift_excluder=false
# Manage openshift example imagestreams and templates during install and upgrade
openshift_install_examples=true
openshift_rolling_restart_mode=system
#openshift_master_unsupported_embedded_etcd=true
##when openshift_deployment_type='origin'
system_images_registry="docker.io"
##when openshift_deployment_type='openshift-enterprise'
# system_images_registry="registry.access.redhat.com"
osm_custom_cors_origins=['127.0.0.1', 'localhost', '.*']
## To enable dynamic provisioning
openshift_master_dynamic_provisioning_enabled=true


###########################################################################
# Docker config
###########################################################################
#openshift_docker_additional_registries=registry.example.com
openshift_docker_insecure_registries='172.30.0.0/16'
#openshift_docker_options=' --selinux-enabled --log-driver json-file --log-opt max-size=10M --log-opt max-file=3 --insecure-registry 172.30.0.0/16 --ipv6=false -l warn --signature-verification=False'
openshift_docker_options=' --log-driver json-file --log-opt max-size=10M --log-opt max-file=3 --ipv6=false -l warn --signature-verification=False'
openshift_docker_selinux_enabled=true
openshift_docker_insecure_registries='172.30.0.0/16'

###########################################################################
# Cri-o config
###########################################################################
#openshift_use_crio=false
#openshift_use_crio_only=true
#openshift_crio_enable_docker_gc=true
#openshift_crio_docker_gc_node_selector={'runtime': 'cri-o'}


###########################################################################
# Authentication
###########################################################################
## https://docs.openshift.org/latest/install_config/configuring_authentication.html#identity-providers-ansible
## for v3.9
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
openshift_master_htpasswd_users={'${OPENSHIFT_USER_NAME}': '${OPENSHIFT_USER_PASSWD_ENC}'}
## for v3.10+
##openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider'}]
##openshift_master_htpasswd_users={'${OPENSHIFT_USER_NAME}':'${OPENSHIFT_USER_PASSWD_ENC}'}
##openshift_master_htpasswd_file=/etc/origin/master/htpasswd


###########################################################################
# Network SDN
###########################################################################
openshift_master_open_ports=[{"service":"calico-etcd","port":"6666/tcp"},{"service":"calico-etcd-peers","port":"6667/tcp"}]
openshift_use_openshift_sdn=${OPENSHIFT_USE_OPENSHIFT_SDN}
os_sdn_network_plugin_name="${OS_SDN_NETWORK_PLUGIN_NAME}"
openshift_use_calico=${OPENSHIFT_USE_CALICO_SDN}
calico_ipv4pool_ipip="${CALICO_IPV4POOL_IPIP}"
calico_url_policy_controller="${CALICO_URL_POLICY_CONTROLLER}"
calico_node_image="${CALICO_NODE_IMAGE}"
#calico_node_image="quay.io/tigera/cnx-node:v2.1.1"
calico_cni_image="${CALICO_CNI_IMAGE}"
calico_upgrade_image="${CALICO_UPGRADE_IMAGE}"
calico_etcd_image="${CALICO_ETCD_IMAGE}"
calico_etcd_endpoints=https://${MASTER_FQDN}:6666
calico_etcd_initial_cluster="${MASTER_FQDN}=https://${MASTER_FQDN}:6667"
calico_etcd_generate_certs="true"
calico_etcd_service_ip="172.30.131.21"
calico_etcd_clients_port="6666"
calico_etcd_peers_port="6667"
calico_etcd_ca_cert_file=/calico-secrets/calico-etcd-ca.crt
calico_etcd_cert_file=/calico-secrets/calico-etcd-peer.crt
calico_etcd_key_file=/calico-secrets/calico-etcd-peer.key
calico_etcd_cert_dir=/calico-secrets
calico_etcd_mount=/var/etcd
calico_url_calicoctl=https://www.projectcalico.org/builds/calicoctl


###########################################################################
# Network configuration
###########################################################################
openshift_public_hostname=console.${OPENSHIFT_DOMAIN}
openshift_master_default_subdomain=apps.${OPENSHIFT_DOMAIN}
## Set cluster_hostname to point at your load balancer
openshift_master_cluster_hostname=api-int.${OPENSHIFT_DOMAIN}
openshift_master_cluster_public_hostname=api.${OPENSHIFT_DOMAIN}
osm_cluster_network_cidr=10.128.0.0/14
openshift_portal_net=172.30.0.0/16
osm_host_subnet_length=8
openshift_set_node_ip=true
os_firewall_use_firewalld=true
#os_firewall_use_firewalld=false
openshift_master_api_port=${OPENSHIFT_API_PORT}
openshift_master_console_port=${OPENSHIFT_API_PORT}
## Uncomment if we have more than one master
#openshift_master_cluster_method=native
openshift_http_proxy="${openshift_http_proxy}"
openshift_https_proxy='${openshift_https_proxy}'
openshift_no_proxy='${openshift_no_proxy}'


###########################################################################
# Kubernetes configuration
###########################################################################
# https://bugzilla.redhat.com/show_bug.cgi?id=1575410
openshift_node_kubelet_args={'pods-per-core': ['10'], 'max-pods': ['250'], 'image-gc-high-threshold': ['90'], 'image-gc-low-threshold': ['80'], 'kube-reserved': ['cpu=100m,memory=300M'], 'system-reserved': ['cpu=100m,memory=100M'], 'maximum-dead-containers': ['20'], 'image-pull-progress-deadline': ['10m'], 'resolv-conf': ['/etc/resolv.conf']}
openshift_master_audit_config={"enabled": true, "auditFilePath": "/var/log/openpaas-oscp-audit/openpaas-oscp-audit.log", "maximumFileRetentionDays": 14, "maximumFileSizeMegabytes": 500, "maximumRetainedFiles": 5}
#openshift_master_admission_plugin_config={"ValidatingAdmissionWebhook":{"configuration":{"kind": "DefaultAdmissionConfig","apiVersion": "v1","disable": false}},"MutatingAdmissionWebhook":{"configuration":{"kind": "DefaultAdmissionConfig","apiVersion": "v1","disable": false}}}

## Configure master API rate limits for external clients
#openshift_master_external_ratelimit_qps=200
#openshift_master_external_ratelimit_burst=400
## Configure master API rate limits for loopback clients
#openshift_master_loopback_ratelimit_qps=300
#openshift_master_loopback_ratelimit_burst=600

#openshift_master_bootstrap_auto_approve=true
#openshift_master_bootstrap_auto_approver_node_selector={"node-role.kubernetes.io/master":"true"}
#osm_controller_args={"experimental-cluster-signing-duration": ["20m"]}
#osm_etcd_image='quay.io/coreos/etcd'


###########################################################################
# Ansible service broker
###########################################################################
ansible_service_broker_install=false
template_service_broker_selector={'region':'primary'}
ansible_service_broker_local_registry_whitelist=['.*-apb$']


###########################################################################
# Template service broker
###########################################################################
template_service_broker_install=true
template_service_broker_selector={'region':'primary'}
#template_service_broker_selector='node-role.kubernetes.io/infra=true'


###########################################################################
# Web console
###########################################################################
openshift_web_console_nodeselector={'region':'primary'}
#openshift_web_console_nodeselector='node-role.kubernetes.io/infra=true'


###########################################################################
# Router
###########################################################################
openshift_hosted_router_namespace='kube-system'
openshift_hosted_router_replicas=1
openshift_hosted_router_selector='node-role.kubernetes.io/infra=true'
#openshift_hosted_router_selector='region=primary'


###########################################################################
# GlusterFS / CNS
###########################################################################
## https://github.com/openshift/openshift-ansible/tree/master/roles/openshift_storage_glusterfs
openshift_storage_glusterfs_namespace=glusterfs
openshift_storage_glusterfs_is_native=true
openshift_storage_glusterfs_heketi_is_native=true
openshift_storage_glusterfs_name=storage
#openshift_storage_glusterfs_nodeselector="region=cns"
openshift_storage_glusterfs_nodeselector='node-role.kubernetes.io/storage=true'
openshift_storage_glusterfs_heketi_wipe=true
openshift_storage_glusterfs_wipe=true
openshift_storage_glusterfs_storageclass_default=true
openshift_storage_glusterfs_block_storageclass=true
openshift_storage_glusterfs_block_storageclass_default=false

##heketi does not automatically create block hosting volume on single node cluster
openshift_storage_glusterfs_block_host_vol_create=false
openshift_storage_glusterfs_block_host_vol_size=100
openshift_storage_glusterfs_block_host_vol_max=15

## https://github.com/openshift/openshift-ansible/tree/master/roles/openshift_storage_glusterfs
##ideally this should not be defined, i.e. auto-generate
#openshift_storage_glusterfs_heketi_admin_key=hkadmin
#openshift_storage_glusterfs_heketi_user_key=hkuser

## Gluster S3 storage
## https://github.com/openshift/openshift-ansible/blob/release-3.9/roles/openshift_storage_glusterfs/tasks/glusterfs_common.yml#L268
## https://access.redhat.com/documentation/en-us/red_hat_gluster_storage/3.3/html/container-native_storage_for_openshift_container_platform/s3_object_store
#openshift_storage_glusterfs_s3_account=s3account
#openshift_storage_glusterfs_s3_user=s3user
#openshift_storage_glusterfs_s3_password=s3passwd

## gluster container images
## https://github.com/openshift/openshift-docs/pull/10873/files

###########################################################################
# Service catalog / etcd
###########################################################################
openshift_enable_service_catalog=false
openshift_hosted_etcd_storage_kind=dynamic
openshift_hosted_etcd_storage_volume_name=etcd-vol2
openshift_hosted_etcd_storage_access_modes=["ReadWriteOnce"]
openshift_hosted_etcd_storage_volume_size=10Gi


###########################################################################
# Registry
###########################################################################
## v3.9 has a bug where-in the namespaces seems to be hardcoded
##openshift_hosted_registry_namespace='kube-system'
openshift_hosted_registry_selector='region=primary'
#openshift_hosted_registry_selector='node-role.kubernetes.io/infra=true'
openshift_hosted_registry_replicas=1
openshift_hosted_manage_registry=true
osm_use_cockpit=true
osm_cockpit_plugins=['cockpit-kubernetes']
openshift_hosted_registry_storage_kind=glusterfs
openshift_hosted_registry_storage_volume_size=10Gi
openshift_hosted_manage_registry_console=true

## hostPath (local filesystem storage)
## Suitable for "all-in-one" or proof of concept deployments
## Must not be used for high-availability and production deployments
#openshift_hosted_registry_storage_kind=hostpath
#openshift_hosted_registry_storage_access_modes=['ReadWriteOnce']
#openshift_hosted_registry_storage_hostpath_path=/var/lib/openshift_volumes
#openshift_hosted_registry_storage_volume_size=10Gi


###########################################################################
# Logging
###########################################################################
## https://github.com/openshift/openshift-ansible/tree/master/roles/openshift_logging
## https://bugzilla.redhat.com/show_bug.cgi?id=1544243
openshift_logging_install_logging=${OPENSHIFT_DEPLOY_LOGGING}
openshift_logging_es_pvc_dynamic=true
openshift_logging_es_pvc_size=10Gi
openshift_logging_es_pvc_storage_class_name=glusterfs-storage-block
openshift_logging_es_nodeselector={"region":"primary"}
openshift_logging_kibana_nodeselector={"region":"primary"}
openshift_logging_curator_nodeselector={"region":"primary"}
openshift_logging_fluentd_nodeselector={"logging":"true"}
openshift_logging_es_cluster_size=1
openshift_logging_es_number_of_replicas=1
openshift_logging_es_memory_limit=1Gi
openshift_logging_es_ops_memory_limit=1Gi
## https://docs.openshift.com/container-platform/3.9/install_config/aggregate_logging.html
##openshift_logging_use_ops=true
#openshift_logging_image_version=v3.9.30


###########################################################################
# Legacy metrics
###########################################################################
openshift_metrics_install_metrics=false
openshift_metrics_cassandra_storage_type=dynamic
openshift_metrics_cassandra_pvc_size=10Gi
openshift_metrics_cassandra_pvc_storage_class_name=glusterfs-storage-block
openshift_metrics_hawkular_nodeselector={"region":"primary"}
openshift_metrics_cassandra_nodeselector={"region":"primary"}
openshift_metrics_heapster_nodeselector={"region":"primary"}


###########################################################################
# Prometheus metrics and alerting
###########################################################################
## https://github.com/openshift/openshift-ansible/tree/master/roles/openshift_prometheus
openshift_hosted_prometheus_deploy=${OPENSHIFT_DEPLOY_MONITORING}
openshift_prometheus_node_selector={"region":"primary"}
openshift_prometheus_namespace=openshift-metrics
openshift_prometheus_storage_access_modes=['ReadWriteOnce']
openshift_prometheus_storage_volume_name=prometheus
openshift_prometheus_storage_volume_size=10Gi
openshift_prometheus_storage_type='pvc'
#openshift_prometheus_sc_name="glusterfs-storage"
openshift_prometheus_storage_class="glusterfs-storage"
openshift_prometheus_alertmanager_storage_access_modes=['ReadWriteOnce']
openshift_prometheus_alertmanager_storage_volume_name=prometheus-alertmanager
openshift_prometheus_alertmanager_storage_volume_size=10Gi
openshift_prometheus_alertmanager_storage_type='pvc'
#openshift_prometheus_alertmanager_sc_name="glusterfs-storage"
openshift_prometheus_alertmanager_storage_class="glusterfs-storage"
openshift_prometheus_alertbuffer_storage_access_modes=['ReadWriteOnce']
openshift_prometheus_alertbuffer_storage_volume_name=prometheus-alertbuffer
openshift_prometheus_alertbuffer_storage_volume_size=10Gi
openshift_prometheus_alertbuffer_storage_type='pvc'
#openshift_prometheus_alertbuffer_sc_name="glusterfs-storage"
openshift_prometheus_alertbuffer_storage_class="glusterfs-storage"


[masters]
${MASTER_FQDN} openshift_ip=${MASTER_IP} openshift_public_ip=${MASTER_IP} openshift_public_hostname=${MASTER_FQDN} openshift_hostname=${MASTER_FQDN} openshift_schedulable=true

[etcd]
${MASTER_FQDN} openshift_ip=${MASTER_IP}  openshift_public_ip=${MASTER_IP}

[nodes]
##${MASTER_FQDN} ansible_connection=local openshift_ip=${MASTER_IP} openshift_schedulable=true openshift_node_labels="{'region': 'primary', 'zone': 'default', 'node-role.kubernetes.io/storage':'true', 'node-role.kubernetes.io/compute': 'true', 'node-role.kubernetes.io/master': 'true', 'node-role.kubernetes.io/infra': 'true'}" openshift_node_group_name="node-config-all-in-one"

# openshift v3.9
${MASTER_FQDN} ansible_connection=local openshift_ip=${MASTER_IP} openshift_schedulable=true openshift_node_labels="{'region': 'primary', 'zone': 'default', 'calico-etcd': 'true','logging': 'true', 'node-role.kubernetes.io/storage':'true', 'node-role.kubernetes.io/compute': 'true', 'node-role.kubernetes.io/master': 'true', 'node-role.kubernetes.io/infra': 'true', 'node-role.kubernetes.io/master': 'true'}"

# https://github.com/openshift/release/blob/master/cluster/test-deploy/gcp/vars.yaml
# openshift v3.10
# openshift_node_group_name should refer to a dictionary with matching key of name in list openshift_node_groups.
#${MASTER_FQDN} ansible_connection=local openshift_ip=${MASTER_IP} openshift_schedulable=true openshift_node_labels="{'region': 'primary', 'zone': 'default', 'calico-etcd': 'true', 'node-role.kubernetes.io/storage':'true', 'node-role.kubernetes.io/compute': 'true', 'node-role.kubernetes.io/master': 'true', 'node-role.kubernetes.io/infra': 'true', 'node-role.kubernetes.io/master': 'true'}" openshift_node_group_name="node-config-all-in-one"

#${INFRA_FQDN} ansible_connection=local openshift_ip=${INFRA_IP} openshift_schedulable=true openshift_node_labels="{'zone': 'default', 'node-role.kubernetes.io/storage':'true'}"

[glusterfs]
${MASTER_FQDN} glusterfs_hostname="${MASTER_FQDN}" gluster_ip="${MASTER_IP}" glusterfs_devices='[${GLUSTERFS_DRIVES}]' openshift_schedulable=True


##openshift_node_labels: "{'node-role.kubernetes.io/compute':'true','node-role.kubernetes.io/storage':'true','logging-infra-fluentd':'true', 'zone': 'az1', 'region':'us'}"

## https://github.com/redhat-nfvpe/base-infra-bootstrap/blob/master/inventory/examples/openshift-ansible_2_node_cluster/telemetry.inventory#L85
##[glusterfs:vars]
##glusterfs_devices=[ "/dev/vdb" ]
##r_openshift_storage_glusterfs_use_firewalld=false
##r_openshift_storage_glusterfs_firewall_enabled=true
##openshift_storage_glusterfs_timeout=900
##openshift_storage_glusterfs_wipe=true

## https://github.com/Azure/acs-engine/blob/master/pkg/openshift/certgen/unstable/templates/master/tmp/ansible/azure-local-master-inventory.yml

#[registries]
#registry.vagrant.test
